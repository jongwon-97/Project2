<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosmo.nexus.mapper.BoardMapper">
    <resultMap id="BoardResultMap" type="Board">
        <result property="boardId" column="board_id"/>
        <result property="boardTitle" column="board_title"/>
        <result property="boardContent" column="board_content"/>
        <result property="boardViews" column="board_views"/>
        <result property="boardCreateDate" column="board_create_date"/>
        <result property="boardCategory" column="board_category"/>
        <result property="disclosureStatus" column="disclosure_status"/>
        <result property="answerStatus" column="answer_status"/>
        <result property="memberId" column="member_id"/>
        <result property="isNotice" column="is_notice"/> <!-- 공지 여부 매핑 -->
    </resultMap>


    <select id="selectNotificationList" parameterType="Paging" resultType="Board">
        (
        -- 공지사항 가져오기
        SELECT
        b.board_id AS boardId,
        b.board_title AS boardTitle,
        b.board_content AS boardContent,
        b.member_id AS memberId,
        b.board_create_date AS boardCreateDate,
        b.board_views AS boardViews,
        b.is_notice AS isNotice,
        (SELECT COUNT(*)
        FROM c_comment c
        WHERE c.board_id = b.board_id AND c.parent_id IS NULL) AS commentCount,
        1 AS priority
        FROM c_board b
        WHERE b.board_category = '공지사항'
        AND b.is_notice = true
        <if test="findType != null and findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="findType != null and findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        )
        UNION ALL
        (
        -- 일반 글 가져오기
        SELECT
        b.board_id AS boardId,
        b.board_title AS boardTitle,
        b.board_content AS boardContent,
        b.member_id AS memberId,
        b.board_create_date AS boardCreateDate,
        b.board_views AS boardViews,
        b.is_notice AS isNotice,
        (SELECT COUNT(*)
        FROM c_comment c
        WHERE c.board_id = b.board_id AND c.parent_id IS NULL) AS commentCount,
        2 AS priority
        FROM c_board b
        WHERE b.board_category = '공지사항'
        AND b.is_notice = false
        <if test="findType != null and findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="findType != null and findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        ORDER BY b.board_id DESC
        LIMIT #{start}, #{oneRecordPage}
        )
        ORDER BY priority ASC, boardId DESC;
    </select>

    <select id="getTotalGeneralCount" parameterType="Paging" resultType="int">
        SELECT COUNT(*)
        FROM c_board
        WHERE is_notice = false
        AND board_category = "공지사항"
        <if test="findType != null and findType == 'title'">
            AND board_title LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="findType != null and findType == 'member'">
            AND member_id LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
    </select>

    <select id="getTotalCompanyCount" parameterType="Paging" resultType="int">
        SELECT COUNT(*)
        FROM c_board b
        JOIN c_member m ON b.member_id = m.member_id
        WHERE b.is_notice = false
        AND m.company_id IN (#{companyId}, 0)
        AND b.board_category = "공지사항"
        <if test="paging.findType != null and paging.findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        <if test="paging.findType != null and paging.findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
    </select>


    <!-- 총 게시물 수 조회 -->
    <select id="getTotalNotificationCount" resultType="int">
        SELECT COUNT(*)
        FROM c_board
    </select>


    <!-- 공지사항 상세보기 -->
    <select id="selectNotificationById" resultMap="BoardResultMap">
        SELECT * FROM c_board WHERE board_id = #{num}
    </select>

    <insert id="insertNotification" parameterType="com.kosmo.nexus.dto.NoticeDTO" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO c_board (board_title, board_content, board_views, board_create_date, board_category, member_id, is_notice)
        VALUES (#{boardTitle}, #{boardContent}, #{boardViews}, NOW(), '공지사항', #{memberId}, #{isNotice})
    </insert>


    <delete id="deleteNotification">
        DELETE FROM c_board WHERE board_id = #{num}
    </delete>

    <update id="updateNotification" parameterType="com.kosmo.nexus.dto.NoticeDTO">
        UPDATE c_board
        SET
        board_title = #{boardTitle},
        board_content = #{boardContent},
        is_notice = #{isNotice} <!-- 공지 여부 업데이트 -->
        WHERE board_id = #{boardId}
    </update>

    <update id="updateViewCount">
        UPDATE c_board
        SET board_views = board_views + 1
        WHERE board_id = #{num}
    </update>

    <insert id="insertBoard" parameterType="Board" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO c_board (board_title, board_content, board_category, member_id, board_create_date)
        VALUES (#{boardTitle}, #{boardContent}, #{boardCategory}, #{memberId}, NOW())
    </insert>


    <!-- QnA xml문-->
    <!-- QnA 목록 조회 -->
    <select id="selectQnaList" parameterType="Paging" resultType="Board">
        SELECT
        b.board_id AS boardId,
        b.board_title AS boardTitle,
        b.board_content AS boardContent,
        b.member_id AS memberId,
        b.board_create_date AS boardCreateDate,
        b.board_views AS boardViews,
        b.disclosure_status AS disclosureStatus,
        b.answer_status AS answerStatus,
        (SELECT COUNT(*) FROM c_comment c WHERE c.board_id = b.board_id) AS commentCount
        FROM c_board b
        WHERE b.board_category = 'QnA'
        <if test="findType != null and findKeyword != null and findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="findType != null and findKeyword != null and findType == 'content'">
            AND b.board_content LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="findType != null and findKeyword != null and findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        ORDER BY b.board_id DESC
        LIMIT #{start}, #{oneRecordPage};
    </select>

    <!-- QnA 총 게시물 수 -->
    <select id="getTotalQnaCount" parameterType="Paging" resultType="int">
        SELECT COUNT(*)
        FROM c_board
        WHERE board_category = "QnA"
        <if test="findType != null and findKeyword != null and findType == 'title'">
            AND board_title LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="findType != null and findKeyword != null and findType == 'content'">
            AND board_content LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="findType != null and findKeyword != null and findType == 'member'">
            AND member_id LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
    </select>

    <!-- QnA 총 게시물 수 -->
    <select id="getTotalQnaCompanyCount" parameterType="Paging" resultType="int">
        SELECT COUNT(*)
        FROM c_board b
        JOIN c_member m ON b.member_id = m.member_id
        WHERE b.board_category = "QnA"
        AND m.company_id IN (#{companyId}, 0)
        <if test="paging.findType != null and paging.findKeyword != null and paging.findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        <if test="paging.findType != null and paging.findKeyword != null and paging.findType == 'content'">
            AND b.board_content LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        <if test="paging.findType != null and paging.findKeyword != null and paging.findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
    </select>
    <!-- QnA 상세보기 -->
    <select id="selectQnaById" resultType="Board">
        SELECT
        board_id AS boardId,
        board_title AS boardTitle,
        board_content AS boardContent,
        member_id AS memberId,
        board_create_date AS boardCreateDate,
        board_views AS boardViews,
        board_category AS boardCategory,
        disclosure_status AS disclosureStatus <!-- 추가 -->
        FROM c_board
        WHERE board_id = #{num};
    </select>

    <!-- QnA 작성 -->
    <insert id="insertQna" parameterType="com.kosmo.nexus.dto.BoardDTO" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO c_board (board_title, board_content, board_views, board_create_date, board_category, disclosure_status, answer_status, member_id)
        VALUES (#{boardTitle}, #{boardContent}, 0, NOW(), 'QnA', #{disclosureStatus}, 'N', #{memberId})
    </insert>

    <!-- QnA 수정 -->
    <update id="updateQna" parameterType="com.kosmo.nexus.dto.BoardDTO">
        UPDATE c_board
        SET
        board_title = #{boardTitle},
        board_content = #{boardContent},
        disclosure_status = #{disclosureStatus}
        WHERE board_id = #{boardId};
    </update>

    <!-- QnA 삭제 -->
    <delete id="deleteQna">
        DELETE FROM c_board WHERE board_id = #{num};
    </delete>

    <!-- QnA 조회수 증가 -->
    <update id="updateQnaViewCount">
        UPDATE c_board
        SET board_views = board_views + 1
        WHERE board_id = #{num};
    </update>

    <update id="updateAnswerStatus">
        UPDATE c_board
        SET answer_status = #{answerStatus}
        WHERE board_id = #{boardId};
    </update>

    <!-- 게시판 ID로 데이터 삭제 -->
    <delete id="deleteBoardById" parameterType="int">
        DELETE FROM c_board WHERE board_id = #{boardId}
    </delete>

    <update id="updateBoard" parameterType="Board">
        UPDATE c_board
        SET
        board_title = #{boardTitle},
        board_content = #{boardContent},
        board_category = #{boardCategory},
        board_create_date = #{boardCreateDate},
        disclosure_status = #{disclosureStatus}
        WHERE board_id = #{boardId}
    </update>

    <!-- season_id를 통해 board_id 조회 -->
    <select id="getBoardIdBySeasonId" parameterType="int" resultType="java.lang.Integer">
        SELECT board_id
        FROM c_season
        WHERE season_id = #{seasonId}
    </select>

    <select id="selectNotificationListByCompanyId" parameterType="map" resultType="Board">
        (
        -- 공지사항 가져오기
        SELECT
        b.board_id AS boardId,
        b.board_title AS boardTitle,
        b.board_content AS boardContent,
        b.member_id AS memberId,
        b.board_create_date AS boardCreateDate,
        b.board_views AS boardViews,
        b.is_notice AS isNotice,
        (SELECT COUNT(*)
        FROM c_comment c
        WHERE c.board_id = b.board_id AND c.parent_id IS NULL) AS commentCount,
        1 AS priority
        FROM c_board b
        JOIN c_member m ON b.member_id = m.member_id
        WHERE b.board_category = '공지사항'
        AND b.is_notice = true
        AND (m.company_id = #{companyId} OR m.company_id = 0)  <!-- 회사 ID가 #{companyId}거나, 0인 경우도 포함 -->
        <if test="paging.findType != null and paging.findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        <if test="paging.findType != null and paging.findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        )
        UNION ALL
        (
        -- 일반 글 가져오기
        SELECT
        b.board_id AS boardId,
        b.board_title AS boardTitle,
        b.board_content AS boardContent,
        b.member_id AS memberId,
        b.board_create_date AS boardCreateDate,
        b.board_views AS boardViews,
        b.is_notice AS isNotice,
        (SELECT COUNT(*)
        FROM c_comment c
        WHERE c.board_id = b.board_id AND c.parent_id IS NULL) AS commentCount,
        2 AS priority
        FROM c_board b
        JOIN c_member m ON b.member_id = m.member_id
        WHERE b.board_category = '공지사항'
        AND b.is_notice = false
        AND (m.company_id = #{companyId} OR m.company_id = 0)  <!-- 회사 ID가 #{companyId}거나, 0인 경우도 포함 -->
        <if test="paging.findType != null and paging.findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        <if test="paging.findType != null and paging.findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        ORDER BY b.board_id DESC
        LIMIT #{paging.start}, #{paging.oneRecordPage}
        )
        ORDER BY priority ASC, boardId DESC;
    </select>

    <select id="selectQnaListByCompanyID" parameterType="Map" resultType="Board">
        SELECT
        b.board_id AS boardId,
        b.board_title AS boardTitle,
        b.board_content AS boardContent,
        b.member_id AS memberId,
        b.board_create_date AS boardCreateDate,
        b.board_views AS boardViews,
        b.disclosure_status AS disclosureStatus,
        b.answer_status AS answerStatus,
        (SELECT COUNT(*) FROM c_comment c WHERE c.board_id = b.board_id) AS commentCount
        FROM c_board b
        JOIN c_member m ON b.member_id = m.member_id
        WHERE b.board_category = 'QnA'
        AND (m.company_id = #{companyId} OR m.company_id = 0)
        <if test="paging.findType != null and paging.findKeyword != null and paging.findType == 'title'">
            AND b.board_title LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        <if test="paging.findType != null and paging.findKeyword != null and paging.findType == 'content'">
            AND b.board_content LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        <if test="paging.findType != null and paging.findKeyword != null and paging.findType == 'member'">
            AND b.member_id LIKE CONCAT('%', #{paging.findKeyword}, '%')
        </if>
        ORDER BY b.board_id DESC
        LIMIT #{paging.start}, #{paging.oneRecordPage};
    </select>

    <select id="selectUnansByCompanyID">
        SELECT COUNT(*)
        FROM c_board b
        JOIN c_member m ON b.member_id = m.member_id
        WHERE b.board_category = 'QnA'
        AND (m.company_id = #{companyId} OR m.company_id = 0)
        AND b.answer_status ='N'
    </select>

</mapper>
