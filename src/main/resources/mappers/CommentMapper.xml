<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper
3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- BoardMapper의 경로를 정확히 넣어줘야 함-->
<mapper namespace="com.kosmo.nexus.mapper.CommentMapper">

    <!-- 댓글을 DB에 저장하는 SQL -->
    <insert id="insertComment" parameterType="Comment">
        INSERT INTO c_comment (board_id, member_id, comment_content, parent_id)
        VALUES (#{boardId}, #{memberId}, #{commentContent},
        <choose>
            <when test="parentId != null">#{parentId}</when>
            <otherwise>NULL</otherwise>
        </choose>);
    </insert>

    <!-- 댓글 목록을 가져오는 SQL(parent_id가 NULL인 댓글만 가져오기) -->
    <select id="findCommentsByBoardId" resultType="Comment">
        SELECT comment_id AS commentId, board_id AS boardId, member_id AS memberId,
               comment_content AS commentContent, comment_time AS commentTime,
               parent_id AS parentId
        FROM c_comment
        WHERE board_id = #{boardId} AND parent_id IS NULL
        ORDER BY comment_time ASC;
    </select>
    <!-- 대댓글을 가져오는 SQL(parent_id가 부모 댓글의 commentId인 대댓글 가져오기) -->
    <select id="findRepliesByParentId" resultType="Comment">
        SELECT comment_id AS commentId, board_id AS boardId, member_id AS memberId,
               comment_content AS commentContent, comment_time AS commentTime,
               parent_id AS parentId
        FROM c_comment
        WHERE parent_id = #{parentId}
        ORDER BY comment_time ASC;
    </select>

    <!-- 댓글 작성자 확인(삭제를 위함) ///////////////////////////////////////- -->
    <select id="findCommentOwnerById" resultType="String">
        SELECT member_id
        FROM c_comment
        WHERE comment_id = #{commentId}
    </select>

    <!-- 대댓글 삭제 -->
    <delete id="deleteReplies">
        DELETE FROM c_comment
        WHERE parent_id = #{commentId}
    </delete>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment">
        DELETE FROM c_comment
        WHERE comment_id = #{commentId}
    </delete>

    <update id="updateComment" parameterType="Comment">
        UPDATE c_comment
        SET comment_content = #{commentContent}
        WHERE comment_id = #{commentId}
    </update>

    <delete id="deleteCommentsByBoardId" parameterType="int">
        DELETE FROM c_comment
        WHERE board_id = #{boardId}
    </delete>

    <!-- Q&A 답변 상태 업데이트 -->
    <update id="updateAnswerStatus">
        UPDATE c_board
        SET answer_status = 'Y'
        WHERE board_id = #{boardId}
    </update>

    <!-- seasonId로 댓글 및 대댓글 가져오기 -->
    <select id="selectCommentsByBoardId" parameterType="int" resultType="Comment">
        SELECT
        comment_id AS commentId,
        board_id AS boardId,
        parent_id AS parentId,
        member_id AS memberId,
        comment_content AS commentContent,
        comment_time AS commentTime
        FROM c_comment
        WHERE board_id = #{boardId}
        ORDER BY parent_id ASC, comment_id ASC
    </select>



</mapper>