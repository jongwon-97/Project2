<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper
3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.kosmo.nexus.mapper.EventMapper">

    <insert id="insertEvent" parameterType="Event" useGeneratedKeys="true" keyProperty="eventId">
        INSERT INTO c_event (event_title, member_id)
        VALUES (#{eventTitle}, #{memberId})
    </insert>

    <insert id="insertSeason" parameterType="Season">
        INSERT INTO c_season (season_title, season_info, season_limit, season_fee, season_views, season_start_date, season_end_date, event_id, season_state, board_id, round_number, season_thumbnail)
        VALUES (#{seasonTitle}, #{seasonInfo}, #{seasonLimit}, #{seasonFee}, #{seasonViews}, #{seasonStartDate}, #{seasonEndDate}, #{eventId}, #{seasonState}, #{boardId}, #{roundNumber}, #{seasonThumbnail})
    </insert>

    <!-- 모든 회차를 조회하는 쿼리 -->
    <select id="getAllSeasons" resultType="Season">
        SELECT
        season_id AS seasonId,
        season_title AS seasonTitle,
        season_info AS seasonInfo,
        season_limit AS seasonLimit,
        season_fee AS seasonFee,
        season_views AS seasonViews,
        season_start_date AS seasonStartDate,
        season_end_date AS seasonEndDate,
        event_id AS eventId,
        season_state AS seasonState,
        board_id AS boardId,
        round_number AS roundNumber,
        season_thumbnail AS seasonThumbnail
        FROM c_season
    </select>

    <select id="getSeasonCountByEventId" parameterType="int" resultType="int">
        SELECT COUNT(*) FROM c_season WHERE event_id = #{eventId}
    </select>

    <select id="selectAllEvents" resultType="Event">
        SELECT event_id AS eventId, event_title AS eventTitle, member_id AS memberId
        FROM c_event
    </select>

    <select id="selectMaxEventId" resultType="int">
        SELECT COALESCE(MAX(event_id), 0) FROM c_event
    </select>

    <!-- 시즌 ID로 게시판 ID 조회 -->
    <select id="getBoardIdBySeasonId" parameterType="int" resultType="java.lang.Integer">
        SELECT board_id FROM c_season WHERE season_id = #{seasonId}
    </select>

    <!-- 시즌 데이터 삭제 -->
    <delete id="deleteSeason" parameterType="int">
        DELETE FROM c_season WHERE season_id = #{seasonId}
    </delete>
    <!-- 업데이트 -->
    <select id="getSeasonById" parameterType="int" resultType="Season">
        SELECT
        season_id AS seasonId,
        season_title AS seasonTitle,
        season_info AS seasonInfo,
        season_limit AS seasonLimit,
        season_fee AS seasonFee,
        season_views AS seasonViews,
        season_start_date AS seasonStartDate,
        season_end_date AS seasonEndDate,
        event_id AS eventId,
        season_state AS seasonState,
        board_id AS boardId,
        round_number AS roundNumber,
        season_thumbnail AS seasonThumbnail
        FROM c_season
        WHERE season_id = #{seasonId}
    </select>

    <update id="updateSeason" parameterType="Season">
        UPDATE c_season
        SET season_title = #{seasonTitle},
        season_info = #{seasonInfo},
        season_limit = #{seasonLimit},
        season_fee = #{seasonFee},
        season_start_date = #{seasonStartDate},
        season_end_date = #{seasonEndDate},
        season_thumbnail = #{seasonThumbnail}, <!-- 단일 파일 경로로 처리 -->
        round_number = #{roundNumber}
        WHERE season_id = #{seasonId}
    </update>

    <select id="selectSeasonList" resultType="Season">
        SELECT
        season_id AS seasonId,
        season_title AS seasonTitle,
        season_info AS seasonInfo,
        season_limit AS seasonLimit,
        season_fee AS seasonFee,
        season_views AS seasonViews,
        season_start_date AS seasonStartDate,
        season_end_date AS seasonEndDate,
        event_id AS eventId,
        season_state AS seasonState,
        board_id AS boardId,
        round_number AS roundNumber,
        season_thumbnail AS seasonThumbnail
        FROM c_season
        ORDER BY season_start_date DESC
    </select>

    <select id="getRoundNumberBySeasonId" parameterType="int" resultType="int">
        SELECT COALESCE(round_number, 0) AS round_number
        FROM c_season
        WHERE season_id = #{seasonId}
    </select>


    <select id="searchSeasons" parameterType="map" resultType="Season">
        SELECT
        season_id AS seasonId,               -- Season DTO의 필드 이름에 맞춤
        season_title AS seasonTitle,
        season_info AS seasonInfo,
        season_limit AS seasonLimit,
        season_fee AS seasonFee,
        season_start_date AS seasonStartDate,
        season_end_date AS seasonEndDate,
        season_state AS seasonState,
        round_number AS roundNumber,
        season_thumbnail AS seasonThumbnail
        FROM c_season
        WHERE 1=1
        <if test="findKeyword != null and findKeyword != ''">
            AND season_title LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        <if test="status != null and status != ''">
            AND season_state = #{status} <!-- 상태 필터링 -->
        </if>
        ORDER BY season_start_date DESC
    </select>

    <!-- 제목 검색 전용 -->
    <select id="searchSeasonsByTitle" parameterType="String" resultType="Season">
        SELECT
        season_id AS seasonId,               -- Season DTO의 필드 이름에 맞춤
        season_title AS seasonTitle,
        season_info AS seasonInfo,
        season_limit AS seasonLimit,
        season_fee AS seasonFee,
        season_start_date AS seasonStartDate,
        season_end_date AS seasonEndDate,
        season_state AS seasonState,
        round_number AS roundNumber,
        season_thumbnail AS seasonThumbnail
        FROM c_season
        WHERE 1=1
        <if test="findKeyword != null and findKeyword != ''">
            AND season_title LIKE CONCAT('%', #{findKeyword}, '%')
        </if>
        ORDER BY season_start_date DESC
    </select>

</mapper>