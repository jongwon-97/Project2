<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper
3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosmo.nexus.mapper.MemberMapper">

    <resultMap id="MemberResultMap" type="Member">
        <result property="memberId" column="member_id"/>
        <result property="memberName" column="member_name"/>
        <result property="memberRole" column="member_role"/>
        <result property="memberImgName" column="member_img"/>
        <result property="memberSns" column="member_sns"/>
        <result property="memberEmail" column="member_email"/>
        <result property="memberPhone" column="member_phone"/>
        <result property="memberGender" column="member_gender"/>
        <result property="memberBirth" column="member_birth"/>
        <result property="memberPostcode" column="member_postcode"/>
        <result property="memberAddress" column="member_address"/>
        <result property="memberDAddress" column="member_d_address"/>
        <result property="memberNum" column="member_num"/>
        <result property="memberRank" column="member_rank"/>
        <result property="memberDepartment" column="member_department"/>
        <result property="companyId" column="company_id"/>
        <result property="memberStatus" column="member_status"/>
        <result property="memberStartDate" column="member_start_date"/>
        <result property="memberLastDate" column="member_last_date"/>
    </resultMap>

    <select id="findMember" resultMap="MemberResultMap" parameterType="String">
        SELECT
        member_id,            -- 아이디
        member_name,          -- 이름
        member_role,          -- 권한
        member_img,           -- 이미지
        member_sns,           -- sns 번호
        member_email,         -- 이메일
        member_phone,         -- 전화번호
        member_gender,        -- 성별
        member_birth,         -- 생년월일
        member_postcode,      -- 우편번호
        member_address,       -- 주소
        member_d_address,     -- 상세 주소
        member_num,                  -- 사번
        member_rank,          -- 직급
        member_department,    -- 부서
        company_id,           -- 회사 ID
        member_status,        -- 상태
        member_start_date,    -- 회원 생성일
        member_last_date      -- 마지막 접속일
        FROM c_member
        WHERE member_id = #{memberId}
    </select>

    <select id="findMemberWithCompanyId" resultMap="MemberResultMap">
        SELECT
        member_id,            -- 아이디
        member_name,          -- 이름
        member_role,          -- 권한
        member_img,           -- 이미지
        member_sns,           -- sns 번호
        member_email,         -- 이메일
        member_phone,         -- 전화번호
        member_gender,        -- 성별
        member_birth,         -- 생년월일
        member_postcode,      -- 우편번호
        member_address,       -- 주소
        member_d_address,     -- 상세 주소
        member_num,                  -- 사번
        member_rank,          -- 직급
        member_department,    -- 부서
        company_id,           -- 회사 ID
        member_status,        -- 상태
        member_start_date,    -- 회원 생성일
        member_last_date      -- 마지막 접속일
        FROM c_member
        WHERE member_id = #{memberId} and company_id = #{companyId}
    </select>

    <select id="findMemberList" resultMap="MemberResultMap">
        SELECT
        member_id,            -- 아이디
        member_name,          -- 이름
        member_role,          -- 권한
        member_img,           -- 이미지
        member_sns,           -- sns 번호
        member_email,         -- 이메일
        member_phone,         -- 전화번호
        member_gender,        -- 성별
        member_birth,         -- 생년월일
        member_postcode,      -- 우편번호
        member_address,       -- 주소
        member_d_address,     -- 상세 주소
        member_num,                  -- 사번
        member_rank,          -- 직급
        member_department,    -- 부서
        company_id,           -- 회사 ID
        member_status,        -- 상태
        member_start_date,    -- 회원 생성일
        member_last_date      -- 마지막 접속일
        FROM c_member
        WHERE company_id = #{companyId}
        ORDER BY member_num
    </select>

    <select id="searchMemberList" resultMap="MemberResultMap">
        SELECT
        member_id,            -- 아이디
        member_name,          -- 이름
        member_role,          -- 권한
        member_img,           -- 이미지
        member_sns,           -- sns 번호
        member_email,         -- 이메일
        member_phone,         -- 전화번호
        member_gender,        -- 성별
        member_birth,         -- 생년월일
        member_postcode,      -- 우편번호
        member_address,       -- 주소
        member_d_address,     -- 상세 주소
        member_num,                  -- 사번
        member_rank,          -- 직급
        member_department,    -- 부서
        company_id,           -- 회사 ID
        member_status,        -- 상태
        member_start_date,    -- 회원 생성일
        member_last_date      -- 마지막 접속일
        FROM c_member
        WHERE company_id = #{companyId}
        <if test="option != null and search != null">
            AND
            <choose>
                <when test="option == 'memberDepartment'">
                    LOWER(member_department) LIKE CONCAT('%', LOWER(#{search}), '%')
                </when>
                <when test="option == 'memberId'">member_id = #{search}</when>
                <when test="option == 'memberNum'">
                    LOWER(member_num) LIKE CONCAT('%', LOWER(#{search}), '%')
                </when>
                <when test="option == 'memberName'">
                    LOWER(member_name) LIKE CONCAT('%', LOWER(#{search}), '%')
                </when>
                <when test="option == 'memberRank'">
                    LOWER(member_rank) LIKE CONCAT('%', LOWER(#{search}), '%')
                </when>
                <otherwise>1 = 0</otherwise> <!-- 잘못된 option일 경우 예외 처리 -->
            </choose>
        </if>
        ORDER BY member_num
    </select>

    <select id="searchMemberListByDate" resultMap="MemberResultMap">
        SELECT
        member_id,            -- 아이디
        member_name,          -- 이름
        member_role,          -- 권한
        member_img,           -- 이미지
        member_sns,           -- sns 번호
        member_email,         -- 이메일
        member_phone,         -- 전화번호
        member_gender,        -- 성별
        member_birth,         -- 생년월일
        member_postcode,      -- 우편번호
        member_address,       -- 주소
        member_d_address,     -- 상세 주소
        member_num,                  -- 사번
        member_rank,          -- 직급
        member_department,    -- 부서
        company_id,           -- 회사 ID
        member_status,        -- 상태
        member_start_date,    -- 회원 생성일
        member_last_date      -- 마지막 접속일
        FROM c_member
        WHERE company_id = #{companyId}
        <if test="birthStart != null and birthStart != ''">
            AND member_birth >= #{birthStart}
        </if>
        <if test="birthEnd != null and birthEnd != ''">
            AND #{birthEnd} >= member_birth
        </if>
        <if test="hireStart != null and hireStart != ''">
            AND member_start_date >= #{hireStart}
        </if>
        <if test="hireEnd != null and hireEnd != ''">
            AND #{hireEnd} >= member_start_date
        </if>
    </select>

    <update id="updateMember" parameterType="Member">
        UPDATE c_member set
        member_email = #{memberEmail},         -- 이메일
        member_phone = #{memberPhone},         -- 전화번호
        member_gender = #{memberGender},        -- 성별
        member_birth= #{memberBirth},          -- 생년월일
        member_postcode = #{memberPostcode},      -- 우편번호
        member_address = #{memberAddress},       -- 주소
        member_d_address = #{memberDAddress}     -- 상세 주소
        WHERE member_id = #{memberId}
    </update>


    <update id="updateMemberByAdmin">
        UPDATE c_member set
        member_num = #{member.memberNum},          -- 사번
        member_name = #{member.memberName},        -- 이름
        member_department = #{member.memberDepartment},    -- 부서
        member_rank = #{member.memberRank},        -- 직급
        member_email = #{member.memberEmail},         -- 이메일
        member_phone = #{member.memberPhone},         -- 전화번호
        member_gender = #{member.memberGender},        -- 성별
        member_birth= #{member.memberBirth},          -- 생년월일
        member_postcode = #{member.memberPostcode},      -- 우편번호
        member_address = #{member.memberAddress},       -- 주소
        member_d_address = #{member.memberDAddress}     -- 상세 주소
        WHERE member_id = #{member.memberId} and company_id =#{companyId}
    </update>

    <delete id="deleteMemberList">
        DELETE FROM c_member
        WHERE company_id =#{companyId} and member_id IN
        <foreach collection="memberIds" item="member" open="(" close=")" separator=",">
            #{member}
        </foreach>
    </delete>

    <update id="updateMemberDepartment">
        UPDATE c_member set
        member_department = #{selDepartment}
        WHERE company_id =#{companyId} and member_id IN
        <foreach collection="memberIds" item="member" open="(" close=")" separator=",">
            #{member}
        </foreach>
    </update>

    <update id="updateMemberRank">
        UPDATE c_member set
        member_rank = #{selRank}
        WHERE company_id =#{companyId} and member_id IN
        <foreach collection="memberIds" item="member" open="(" close=")" separator=",">
            #{member}
        </foreach>
    </update>

    <update id="updateMemberStatus">
        UPDATE c_member set
        member_status = #{selStatus}
        WHERE company_id =#{companyId} and member_id IN
        <foreach collection="memberIds" item="member" open="(" close=")" separator=",">
            #{member}
        </foreach>
    </update>


    <select id ="findImgNamebyIdList" resultType="String">
        SELECT member_img FROM c_member
        WHERE company_id =#{companyId} and member_id IN
        <foreach collection="memberIds" item="member" open="(" close=")" separator=",">
            #{member}
        </foreach>
    </select>

    <select id="findCompanyIdByMemberId" resultType="Long">
        SELECT company_id FROM c_member
        WHERE member_id = #{memberId}
    </select>


    <select id="findDepartmentByCompanyId" resultType="String">
        SELECT DISTINCT `member_department`
        FROM `c_member`
        WHERE `company_id` = #{companyId}
        ORDER BY `member_department` ASC;
    </select>

    <select id="findRankByCompanyId" resultType="String">
        SELECT DISTINCT `member_rank`
        FROM `c_member`
        WHERE `company_id` = #{companyId}
        ORDER BY `member_rank` ASC;
    </select>

    <insert id="insertMemberList">
        INSERT INTO c_member (
            member_id,
            member_pw,
            member_rank,
            member_num,
            member_name,
            member_department,
            member_phone,
            member_birth,
            member_gender,
            member_email,
            member_address,
            member_start_date,
            member_img,
            member_role,
            member_status,
            member_last_date,
            company_id,
            member_sns,
            member_postcode,
            member_d_address)
        VALUES
        <foreach collection="members" item="member" separator=",">
            (#{member.memberId},
            #{member.memberPw},
            #{member.memberRank},
            #{member.memberNum},
            #{member.memberName},
            #{member.memberDepartment},
            #{member.memberPhone},
            #{member.memberBirth},
            #{member.memberGender},
            #{member.memberEmail},
            #{member.memberAddress},
            #{member.memberStartDate},  -- member_start_date는 입사일
            #{member.memberImgName},    -- memberImgName은 DB의 이미지 파일명
            #{member.memberRole},
            #{member.memberStatus},
            NOW(),                      -- member_last_date는 현재 날짜로
            #{member.companyId},
            #{member.memberSns},
            #{member.memberPostcode},
            #{member.memberDAddress})
        </foreach>
    </insert>
</mapper>